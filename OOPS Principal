package oopsexample;
class Person { 
    private String name;   
    private int age;
 Person(String name, int age) {
        this.name = name;
        this.age = age;
    }
  public String getName() {
        return name;
    }
 public void setName(String name) {
        this.name = name;
    }
 public void displayInfo() {
        System.out.println("Person Name: " + name);
        System.out.println("Person Age: " + age);
    }
}
class Employee extends Person {
    private String department;
    private double salary;
 Employee(String name, int age, String department, double salary) {
        super(name, age); 
        this.department = department;
        this.salary = salary;
    }
  @Override
    public void displayInfo() {
        super.displayInfo();
        System.out.println("Department: " + department);
        System.out.println("Salary: " + salary);
    }
  public void displayInfo(String message) {
        System.out.println(message);
        displayInfo(); 
    }
}
public class OOPSDemo {
    public static void main(String[] args) {
       Person p = new Person("Fiorella", 30);
        System.out.println("Person Details");
        p.displayInfo();
        System.out.println();
       Employee e = new Employee("struthi", 28, "IT", 75000);
        System.out.println("Employee Details");
        e.displayInfo(); 
        System.out.println();
        System.out.println("Using Overloaded Method");
        e.displayInfo("Displaying Employee Info (Overloaded method)");
    }
}
